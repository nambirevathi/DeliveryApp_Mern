{"ast":null,"code":"const API_URL = 'http://localhost:5000/api';\nconst api = {\n  get: async (path, token) => {\n    const res = await fetch(`${API_URL}${path}`, {\n      headers: token ? {\n        Authorization: `Bearer ${token}`\n      } : {}\n    });\n    return res.json();\n  },\n  post: async (path, data, token) => {\n    const res = await fetch(`${API_URL}${path}`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n        ...(token && {\n          Authorization: `Bearer ${token}`\n        })\n      },\n      body: JSON.stringify(data)\n    });\n    return res.json();\n  },\n  patch: async (path, data, token) => {\n    const res = await fetch(`${API_URL}${path}`, {\n      method: 'PATCH',\n      headers: {\n        'Content-Type': 'application/json',\n        ...(token && {\n          Authorization: `Bearer ${token}`\n        })\n      },\n      body: JSON.stringify(data)\n    });\n    return res.json();\n  }\n};\nexport default api;","map":{"version":3,"names":["API_URL","api","get","path","token","res","fetch","headers","Authorization","json","post","data","method","body","JSON","stringify","patch"],"sources":["/Users/adityakumar/DELIVERY/frontend/src/utils/api.js"],"sourcesContent":["const API_URL = 'http://localhost:5000/api';\n\nconst api = {\n  get: async (path, token) => {\n    const res = await fetch(`${API_URL}${path}`, {\n      headers: token ? { Authorization: `Bearer ${token}` } : {},\n    });\n    return res.json();\n  },\n  post: async (path, data, token) => {\n    const res = await fetch(`${API_URL}${path}`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n        ...(token && { Authorization: `Bearer ${token}` }),\n      },\n      body: JSON.stringify(data),\n    });\n    return res.json();\n  },\n  patch: async (path, data, token) => {\n    const res = await fetch(`${API_URL}${path}`, {\n      method: 'PATCH',\n      headers: {\n        'Content-Type': 'application/json',\n        ...(token && { Authorization: `Bearer ${token}` }),\n      },\n      body: JSON.stringify(data),\n    });\n    return res.json();\n  },\n};\n\nexport default api; "],"mappings":"AAAA,MAAMA,OAAO,GAAG,2BAA2B;AAE3C,MAAMC,GAAG,GAAG;EACVC,GAAG,EAAE,MAAAA,CAAOC,IAAI,EAAEC,KAAK,KAAK;IAC1B,MAAMC,GAAG,GAAG,MAAMC,KAAK,CAAC,GAAGN,OAAO,GAAGG,IAAI,EAAE,EAAE;MAC3CI,OAAO,EAAEH,KAAK,GAAG;QAAEI,aAAa,EAAE,UAAUJ,KAAK;MAAG,CAAC,GAAG,CAAC;IAC3D,CAAC,CAAC;IACF,OAAOC,GAAG,CAACI,IAAI,CAAC,CAAC;EACnB,CAAC;EACDC,IAAI,EAAE,MAAAA,CAAOP,IAAI,EAAEQ,IAAI,EAAEP,KAAK,KAAK;IACjC,MAAMC,GAAG,GAAG,MAAMC,KAAK,CAAC,GAAGN,OAAO,GAAGG,IAAI,EAAE,EAAE;MAC3CS,MAAM,EAAE,MAAM;MACdL,OAAO,EAAE;QACP,cAAc,EAAE,kBAAkB;QAClC,IAAIH,KAAK,IAAI;UAAEI,aAAa,EAAE,UAAUJ,KAAK;QAAG,CAAC;MACnD,CAAC;MACDS,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACJ,IAAI;IAC3B,CAAC,CAAC;IACF,OAAON,GAAG,CAACI,IAAI,CAAC,CAAC;EACnB,CAAC;EACDO,KAAK,EAAE,MAAAA,CAAOb,IAAI,EAAEQ,IAAI,EAAEP,KAAK,KAAK;IAClC,MAAMC,GAAG,GAAG,MAAMC,KAAK,CAAC,GAAGN,OAAO,GAAGG,IAAI,EAAE,EAAE;MAC3CS,MAAM,EAAE,OAAO;MACfL,OAAO,EAAE;QACP,cAAc,EAAE,kBAAkB;QAClC,IAAIH,KAAK,IAAI;UAAEI,aAAa,EAAE,UAAUJ,KAAK;QAAG,CAAC;MACnD,CAAC;MACDS,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACJ,IAAI;IAC3B,CAAC,CAAC;IACF,OAAON,GAAG,CAACI,IAAI,CAAC,CAAC;EACnB;AACF,CAAC;AAED,eAAeR,GAAG","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}